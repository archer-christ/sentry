// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProjectDebugSymbols renders 1`] = `
<ProjectDebugSymbols
  params={
    Object {
      "orgId": "org",
      "projectId": "project",
    }
  }
>
  <div>
    <SettingsPageHeading
      title="Debug Information Files"
    >
      <Wrapper>
        <div
          className="css-foidy-Wrapper css-1wp86lr0"
        >
          <Flex
            align="center"
          >
            <StyledFlex
              align="center"
            >
              <div
                className="css-ud6gq6-StyledFlex css-4jd5981"
              >
                <Title>
                  <div
                    className="css-zmdcxu-Title css-1wp86lr1"
                  >
                    Debug Information Files
                  </div>
                </Title>
              </div>
            </StyledFlex>
          </Flex>
        </div>
      </Wrapper>
    </SettingsPageHeading>
    <TextBlock>
      <Component
        className="css-ms59cf-TextBlock css-1gwew8k0"
      >
        <div
          className="css-ms59cf-TextBlock css-1gwew8k0"
        >
          
          Here you can find uploaded debug information (for instance debug
          symbol files or proguard mappings).  This is used to convert
          addresses and minified function names from crash dumps
          into function names and locations.  For JavaScript debug support
          look at releases instead.
        
        </div>
      </Component>
    </TextBlock>
    <Panel
      key="1"
      style={
        Object {
          "marginBottom": 40,
        }
      }
    >
      <StyledPanel
        style={
          Object {
            "marginBottom": 40,
          }
        }
      >
        <div
          className="css-wfa8ap-StyledPanel css-5bw71w0"
          style={
            Object {
              "marginBottom": 40,
            }
          }
        >
          <PanelHeader>
            <StyledPanelHeader>
              <Component
                className="css-kf498j-StyledPanelHeader css-9rpnl60"
              >
                <Flex
                  align="center"
                  className="css-kf498j-StyledPanelHeader css-9rpnl60"
                  justify="space-between"
                >
                  <StyledFlex
                    align="center"
                    className="css-kf498j-StyledPanelHeader css-9rpnl60"
                    justify="space-between"
                  >
                    <div
                      className="css-9rpnl60 css-69xk6m-StyledFlex css-4jd5981"
                    >
                      <div
                        className="app-icon"
                        style={null}
                      />
                      MyApp
                       
                      <small>
                        (
                        com.example.myapp
                        )
                      </small>
                    </div>
                  </StyledFlex>
                </Flex>
              </Component>
            </StyledPanelHeader>
          </PanelHeader>
          <PanelBody
            direction="column"
            disablePadding={true}
            flex={false}
          >
            <div
              className=""
            >
              <PanelItem
                direction="column"
                key="1.0"
                p={2}
              >
                <StyledPanelItem
                  direction="column"
                  p={2}
                >
                  <Flex
                    className="css-g2y9ad-StyledPanelItem css-ggxnv80"
                    direction="column"
                    p={2}
                  >
                    <StyledFlex
                      className="css-g2y9ad-StyledPanelItem css-ggxnv80"
                      direction="column"
                    >
                      <div
                        className="css-ggxnv80 css-cfhnwf-StyledFlex css-4jd5981"
                        direction="column"
                      >
                        <HoverablePanelItem
                          className="hoverable"
                          onClick={[Function]}
                        >
                          <PanelItem
                            className="hoverable css-1mrkblk-HoverablePanelItem css-1v1uf2y2"
                            onClick={[Function]}
                            p={2}
                          >
                            <StyledPanelItem
                              className="hoverable css-1mrkblk-HoverablePanelItem css-1v1uf2y2"
                              onClick={[Function]}
                              p={2}
                            >
                              <Flex
                                className="hoverable css-1v1uf2y2 css-v102fb-StyledPanelItem css-ggxnv80"
                                onClick={[Function]}
                                p={2}
                              >
                                <StyledFlex
                                  className="hoverable css-1v1uf2y2 css-v102fb-StyledPanelItem css-ggxnv80"
                                  onClick={[Function]}
                                >
                                  <div
                                    className="hoverable css-1v1uf2y2 css-ggxnv80 css-1ladx2t-StyledFlex css-4jd5981"
                                    onClick={[Function]}
                                  >
                                    <Flex
                                      direction="column"
                                      flex="1"
                                      p={2}
                                    >
                                      <StyledFlex
                                        direction="column"
                                      >
                                        <div
                                          className="css-1jmc4yx-StyledFlex css-4jd5981"
                                          direction="column"
                                        >
                                          <h3
                                            className="truncate"
                                          >
                                            1.0
                                          </h3>
                                          <div
                                            className="event-message"
                                          >
                                            Builds
                                            : 
                                            1
                                          </div>
                                          <LastSeen
                                            align="center"
                                          >
                                            <Flex
                                              align="center"
                                              className="css-1h38r0a-LastSeen css-1v1uf2y0"
                                            >
                                              <StyledFlex
                                                align="center"
                                                className="css-1h38r0a-LastSeen css-1v1uf2y0"
                                              >
                                                <div
                                                  className="css-1v1uf2y0 css-bwygja-StyledFlex css-4jd5981"
                                                >
                                                  <TimeIcon
                                                    className="icon icon-clock"
                                                  >
                                                    <span
                                                      className="icon icon-clock css-3im64z-TimeIcon css-1v1uf2y1"
                                                    />
                                                  </TimeIcon>
                                                  <TimeSince
                                                    date="2018-01-31T07:16:26.072Z"
                                                    suffix="ago"
                                                  >
                                                    <time
                                                      dateTime="2018-01-31T07:16:26.072Z"
                                                      title="January 31, 2018 7:16 AM UTC"
                                                    >
                                                      in 3 months
                                                    </time>
                                                  </TimeSince>
                                                </div>
                                              </StyledFlex>
                                            </Flex>
                                          </LastSeen>
                                        </div>
                                      </StyledFlex>
                                    </Flex>
                                    <Flex
                                      p={2}
                                    >
                                      <StyledFlex>
                                        <div
                                          className="css-1tj6rdd-StyledFlex css-4jd5981"
                                        >
                                          Debug Information Files
                                          : 
                                          1
                                        </div>
                                      </StyledFlex>
                                    </Flex>
                                  </div>
                                </StyledFlex>
                              </Flex>
                            </StyledPanelItem>
                          </PanelItem>
                        </HoverablePanelItem>
                      </div>
                    </StyledFlex>
                  </Flex>
                </StyledPanelItem>
              </PanelItem>
            </div>
          </PanelBody>
        </div>
      </StyledPanel>
    </Panel>
    <div>
      <SettingsPageHeading
        title="Unreferenced Debug Information Files"
      >
        <Wrapper>
          <div
            className="css-foidy-Wrapper css-1wp86lr0"
          >
            <Flex
              align="center"
            >
              <StyledFlex
                align="center"
              >
                <div
                  className="css-ud6gq6-StyledFlex css-4jd5981"
                >
                  <Title>
                    <div
                      className="css-zmdcxu-Title css-1wp86lr1"
                    >
                      Unreferenced Debug Information Files
                    </div>
                  </Title>
                </div>
              </StyledFlex>
            </Flex>
          </div>
        </Wrapper>
      </SettingsPageHeading>
      <TextBlock>
        <Component
          className="css-ms59cf-TextBlock css-1gwew8k0"
        >
          <div
            className="css-ms59cf-TextBlock css-1gwew8k0"
          >
            
          This list represents all Debug Information Files which are not assigned to an
          app version. We will still find these debug symbols for symbolication
          but we can't tell you which versions they belong to.  This happens
          if you upload them with an old verison of sentry-cli or if sentry-cli
          can't locate the Info.plist file at the time of upload.
        
          </div>
        </Component>
      </TextBlock>
      <table
        className="table"
      >
        <thead>
          <tr>
            <th>
              Debug ID
            </th>
            <th>
              Object
            </th>
            <th>
              Type
            </th>
            <th>
              Uploaded
            </th>
            <th>
              Size
            </th>
            <th />
          </tr>
        </thead>
        <tbody />
      </table>
    </div>
    <Modal
      animation={false}
      autoFocus={true}
      backdrop="static"
      bsClass="modal"
      bsSize="lg"
      dialogComponentClass={[Function]}
      enforceFocus={false}
      keyboard={true}
      manager={
        ModalManager {
          "add": [Function],
          "containers": Array [],
          "data": Array [],
          "handleContainerOverflow": true,
          "hideSiblingNodes": true,
          "isTopModal": [Function],
          "modals": Array [],
          "remove": [Function],
        }
      }
      onHide={[Function]}
      renderBackdrop={[Function]}
      restoreFocus={true}
      show={false}
    >
      <Modal
        autoFocus={true}
        backdrop="static"
        backdropClassName="modal-backdrop"
        containerClassName="modal-open"
        enforceFocus={false}
        keyboard={true}
        manager={
          ModalManager {
            "add": [Function],
            "containers": Array [],
            "data": Array [],
            "handleContainerOverflow": true,
            "hideSiblingNodes": true,
            "isTopModal": [Function],
            "modals": Array [],
            "remove": [Function],
          }
        }
        onEntering={[Function]}
        onExited={[Function]}
        onHide={[Function]}
        renderBackdrop={[Function]}
        restoreFocus={true}
        show={false}
      />
    </Modal>
  </div>
</ProjectDebugSymbols>
`;

exports[`ProjectDebugSymbols renders empty 1`] = `
<div>
  <SettingsPageHeading
    title="Debug Information Files"
  />
  <TextBlock>
    
          Here you can find uploaded debug information (for instance debug
          symbol files or proguard mappings).  This is used to convert
          addresses and minified function names from crash dumps
          into function names and locations.  For JavaScript debug support
          look at releases instead.
        
  </TextBlock>
  <Panel>
    <LoadingIndicator />
  </Panel>
  <Modal
    animation={false}
    autoFocus={true}
    backdrop="static"
    bsClass="modal"
    bsSize="lg"
    dialogComponentClass={[Function]}
    enforceFocus={false}
    keyboard={true}
    manager={
      ModalManager {
        "add": [Function],
        "containers": Array [],
        "data": Array [],
        "handleContainerOverflow": true,
        "hideSiblingNodes": true,
        "isTopModal": [Function],
        "modals": Array [],
        "remove": [Function],
      }
    }
    onHide={[Function]}
    renderBackdrop={[Function]}
    restoreFocus={true}
    show={false}
  >
    <ModalHeader
      bsClass="modal-header"
      closeButton={true}
      closeLabel="Close"
    >
      <ModalTitle
        bsClass="modal-title"
        componentClass="h4"
      >
         (
        )
      </ModalTitle>
    </ModalHeader>
    <ModalBody
      bsClass="modal-body"
      componentClass="div"
    >
      <table
        className="table"
      >
        <thead>
          <tr>
            <th>
              Debug ID
            </th>
            <th>
              Object
            </th>
            <th>
              Type
            </th>
            <th>
              Uploaded
            </th>
            <th>
              Size
            </th>
          </tr>
        </thead>
        <tbody />
      </table>
    </ModalBody>
  </Modal>
</div>
`;
