// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OrganizationIntegrationConfig render() with one integration renders 1`] = `
<OrganizationIntegrationConfig
  params={
    Object {
      "orgId": "org-slug",
      "providerKey": "github",
    }
  }
>
  <SideEffect(DocumentTitle)
    title="GitHub Integration - Sentry"
  >
    <DocumentTitle
      title="GitHub Integration - Sentry"
    >
      <SettingsPageHeading
        icon={
          <PluginIcon
            pluginId="github"
            size={28}
          />
        }
        title="GitHub"
      >
        <Wrapper>
          <div
            className="css-foidy-Wrapper css-1wp86lr0"
          >
            <Flex
              align="center"
            >
              <StyledFlex
                align="center"
              >
                <div
                  className="css-ud6gq6-StyledFlex css-4jd5981"
                >
                  <Box
                    pr={1}
                  >
                    <StyledBox>
                      <div
                        className="css-1xboc7d-StyledBox css-4jd5980"
                      >
                        <PluginIcon
                          pluginId="github"
                          size={28}
                        >
                          <IntegrationIcon
                            image={Object {}}
                            size={28}
                          >
                            <div
                              className="css-1g0dosy-IntegrationIcon css-10uim240"
                              size={28}
                            />
                          </IntegrationIcon>
                        </PluginIcon>
                      </div>
                    </StyledBox>
                  </Box>
                  <Title>
                    <div
                      className="css-zmdcxu-Title css-1wp86lr1"
                    >
                      GitHub
                    </div>
                  </Title>
                </div>
              </StyledFlex>
            </Flex>
          </div>
        </Wrapper>
      </SettingsPageHeading>
      <Panel>
        <StyledPanel>
          <div
            className="css-wfa8ap-StyledPanel css-5bw71w0"
          >
            <PanelHeader
              disablePadding={true}
              hasButtons={true}
            >
              <StyledPanelHeader
                disablePadding={true}
                hasButtons={true}
              >
                <Component
                  className="css-bx554z-StyledPanelHeader css-9rpnl60"
                  disablePadding={true}
                  hasButtons={true}
                >
                  <Flex
                    align="center"
                    className="css-bx554z-StyledPanelHeader css-9rpnl60"
                    justify="space-between"
                  >
                    <StyledFlex
                      align="center"
                      className="css-bx554z-StyledPanelHeader css-9rpnl60"
                      justify="space-between"
                    >
                      <div
                        className="css-9rpnl60 css-fy31jr-StyledFlex css-4jd5981"
                      >
                        <Box
                          px={2}
                        >
                          <StyledBox>
                            <div
                              className="css-1aj9gc4-StyledBox css-4jd5980"
                            >
                              Workspaces
                            </div>
                          </StyledBox>
                        </Box>
                        <Box
                          mr={1}
                        >
                          <StyledBox>
                            <div
                              className="css-1xboc7d-StyledBox css-4jd5980"
                            >
                              <Button
                                disabled={false}
                                onClick={[Function]}
                                size="xsmall"
                              >
                                <button
                                  className="button button-default button-xs"
                                  disabled={false}
                                  onClick={[Function]}
                                  role="button"
                                >
                                  <Flex
                                    align="center"
                                    className="button-label"
                                  >
                                    <StyledFlex
                                      align="center"
                                      className="button-label"
                                    >
                                      <div
                                        className="button-label css-ud6gq6-StyledFlex css-4jd5981"
                                      >
                                        <span
                                          className="icon icon-add"
                                        />
                                         
                                        Add Workspace
                                      </div>
                                    </StyledFlex>
                                  </Flex>
                                </button>
                              </Button>
                            </div>
                          </StyledBox>
                        </Box>
                      </div>
                    </StyledFlex>
                  </Flex>
                </Component>
              </StyledPanelHeader>
            </PanelHeader>
            <PanelBody
              direction="column"
              disablePadding={true}
              flex={false}
            >
              <div
                className=""
              >
                <PanelItem
                  key="1"
                  p={0}
                  py={2}
                >
                  <StyledPanelItem
                    p={0}
                    py={2}
                  >
                    <Flex
                      className="css-g2y9ad-StyledPanelItem css-ggxnv80"
                      p={0}
                      py={2}
                    >
                      <StyledFlex
                        className="css-g2y9ad-StyledPanelItem css-ggxnv80"
                      >
                        <div
                          className="css-ggxnv80 css-1pf07em-StyledFlex css-4jd5981"
                        >
                          <Box
                            pl={2}
                          >
                            <StyledBox>
                              <div
                                className="css-1063ies-StyledBox css-4jd5980"
                              >
                                <IntegrationIcon
                                  src="http://example.com/integration_icon.png"
                                >
                                  <img
                                    className="css-lx37iq-IntegrationIcon css-1c1cwf00"
                                    src="http://example.com/integration_icon.png"
                                  />
                                </IntegrationIcon>
                              </div>
                            </StyledBox>
                          </Box>
                          <Box
                            flex="1"
                            px={2}
                          >
                            <StyledBox>
                              <div
                                className="css-vjb1rk-StyledBox css-4jd5980"
                              >
                                <IntegrationName>
                                  <div
                                    className="css-1daz7ru-IntegrationName css-1c1cwf01"
                                  >
                                    Test Integration
                                  </div>
                                </IntegrationName>
                                <DomainName>
                                  <div
                                    className="css-1y54ser-DomainName css-1c1cwf02"
                                  >
                                    gtithub.com/test-integration
                                  </div>
                                </DomainName>
                              </div>
                            </StyledBox>
                          </Box>
                          <Box
                            mr={1}
                            pr={2}
                          >
                            <StyledBox>
                              <div
                                className="css-1mm7it9-StyledBox css-4jd5980"
                              >
                                <Confirm
                                  cancelText="Cancel"
                                  confirmText="Confirm"
                                  message="Removing this inegration will disable the integration for all projects. Are you sure you want to remove this integration?"
                                  onConfirm={[Function]}
                                  priority="primary"
                                >
                                  <Button
                                    disabled={false}
                                    onClick={[Function]}
                                    size="small"
                                  >
                                    <button
                                      className="button button-default button-sm"
                                      disabled={false}
                                      onClick={[Function]}
                                      role="button"
                                    >
                                      <Flex
                                        align="center"
                                        className="button-label"
                                      >
                                        <StyledFlex
                                          align="center"
                                          className="button-label"
                                        >
                                          <div
                                            className="button-label css-ud6gq6-StyledFlex css-4jd5981"
                                          >
                                            <span
                                              className="icon icon-trash"
                                              style={
                                                Object {
                                                  "margin": 0,
                                                }
                                              }
                                            />
                                          </div>
                                        </StyledFlex>
                                      </Flex>
                                    </button>
                                  </Button>
                                  <Modal
                                    animation={false}
                                    autoFocus={true}
                                    backdrop={true}
                                    bsClass="modal"
                                    dialogComponentClass={[Function]}
                                    enforceFocus={true}
                                    keyboard={true}
                                    manager={
                                      ModalManager {
                                        "add": [Function],
                                        "containers": Array [],
                                        "data": Array [],
                                        "handleContainerOverflow": true,
                                        "hideSiblingNodes": true,
                                        "isTopModal": [Function],
                                        "modals": Array [],
                                        "remove": [Function],
                                      }
                                    }
                                    onHide={[Function]}
                                    renderBackdrop={[Function]}
                                    restoreFocus={true}
                                    show={false}
                                  >
                                    <Modal
                                      autoFocus={true}
                                      backdrop={true}
                                      backdropClassName="modal-backdrop"
                                      containerClassName="modal-open"
                                      enforceFocus={true}
                                      keyboard={true}
                                      manager={
                                        ModalManager {
                                          "add": [Function],
                                          "containers": Array [],
                                          "data": Array [],
                                          "handleContainerOverflow": true,
                                          "hideSiblingNodes": true,
                                          "isTopModal": [Function],
                                          "modals": Array [],
                                          "remove": [Function],
                                        }
                                      }
                                      onEntering={[Function]}
                                      onExited={[Function]}
                                      onHide={[Function]}
                                      renderBackdrop={[Function]}
                                      restoreFocus={true}
                                      show={false}
                                    />
                                  </Modal>
                                </Confirm>
                              </div>
                            </StyledBox>
                          </Box>
                        </div>
                      </StyledFlex>
                    </Flex>
                  </StyledPanelItem>
                </PanelItem>
              </div>
            </PanelBody>
          </div>
        </StyledPanel>
      </Panel>
      <AlertLink
        to="/url/with/params/org-slug/"
      >
        <Component
          className="css-ryqtzi-AlertLink css-1k2xcw02"
          to="/url/with/params/org-slug/"
        >
          <Link
            className="css-ryqtzi-AlertLink css-1k2xcw02"
            to="/url/with/params/org-slug/"
          >
            <Link
              className="css-ryqtzi-AlertLink css-1k2xcw02"
              onlyActiveOnIndex={false}
              style={Object {}}
              to="/url/with/params/org-slug/"
            >
              <a
                className="css-ryqtzi-AlertLink css-1k2xcw02"
                onClick={[Function]}
                style={Object {}}
              >
                <AlertLinkText>
                  <div
                    className="css-19z7wog-AlertLinkText css-1k2xcw00"
                  >
                    <span
                      dangerouslySetInnerHTML={
                        Object {
                          "__html": "This is a <em>alert link</em> with markdown formatting",
                        }
                      }
                    />
                  </div>
                </AlertLinkText>
                <InlineSvg
                  size="1em"
                  src="icon-chevron-right"
                >
                  <StyledSvg
                    height="1em"
                    viewBox={Object {}}
                    width="1em"
                  >
                    <svg
                      className="css-ryh69w-StyledSvg css-adkcw30"
                      height="1em"
                      viewBox={Object {}}
                      width="1em"
                    >
                      <use
                        href="#test"
                        xlinkHref="#test"
                      />
                    </svg>
                  </StyledSvg>
                </InlineSvg>
              </a>
            </Link>
          </Link>
        </Component>
      </AlertLink>
      <hr />
      <h5>
        GitHub Integration
      </h5>
      <Details>
        <Flex
          className="css-1tzy8vl-Details css-1c1cwf03"
        >
          <StyledFlex
            className="css-1tzy8vl-Details css-1c1cwf03"
          >
            <div
              className="css-1c1cwf03 css-fcpi36-StyledFlex css-4jd5981"
            >
              <Box
                width={0.625}
              >
                <StyledBox
                  width={0.625}
                >
                  <div
                    className="css-1m695dv-StyledBox css-4jd5980"
                    width={0.625}
                  >
                    <Description
                      dangerouslySetInnerHTML={
                        Object {
                          "__html": "<p><em>markdown</em> formatted <em>description</em></p>
",
                        }
                      }
                    >
                      <div
                        className="css-i2iqfw-Description css-1c1cwf04"
                        dangerouslySetInnerHTML={
                          Object {
                            "__html": "<p><em>markdown</em> formatted <em>description</em></p>
",
                          }
                        }
                      />
                    </Description>
                    <AuthorName>
                      <div
                        className="css-v0poyl-AuthorName css-1c1cwf05"
                      >
                        By Morty
                      </div>
                    </AuthorName>
                  </div>
                </StyledBox>
              </Box>
              <Box
                ml={60}
              >
                <StyledBox>
                  <div
                    className="css-1io2mi1-StyledBox css-4jd5980"
                  >
                    <MetadataLink
                      href="http://example.com/integration_issue_url"
                    >
                      <a
                        className="css-5qmaie-MetadataLink css-1c1cwf06"
                        href="http://example.com/integration_issue_url"
                      >
                        Report an Issue
                      </a>
                    </MetadataLink>
                    <MetadataLink
                      href="http://example.com/integration_source_url"
                    >
                      <a
                        className="css-5qmaie-MetadataLink css-1c1cwf06"
                        href="http://example.com/integration_source_url"
                      >
                        View Source
                      </a>
                    </MetadataLink>
                  </div>
                </StyledBox>
              </Box>
            </div>
          </StyledFlex>
        </Flex>
      </Details>
    </DocumentTitle>
  </SideEffect(DocumentTitle)>
</OrganizationIntegrationConfig>
`;

exports[`OrganizationIntegrationConfig render() without any integrations Displays an error for an invalid provider key 1`] = `
<SideEffect(DocumentTitle)
  title="Global Integrations - Sentry"
>
  <LoadingError
    message="Invalid integration provider"
  />
</SideEffect(DocumentTitle)>
`;
